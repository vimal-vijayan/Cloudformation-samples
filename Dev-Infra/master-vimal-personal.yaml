AWSTemplateFormatVersion: '2010-09-09'
Description: >

  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availabilty Zones. It deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a NAT Gateway and default routes for them in the private subnets

Parameters:
  Project:
    Type: String
    Description: Enter Project Name
    Default: Demo
  Environment:
    Type: String
    Description: "Please specify the Environment"
    Default: Dev
    AllowedValues:
      - Dev
      - Stage
      - Prod
  VpcName:
    Type: String
    Description: "Enter VPC Name"
    Default:  Dev-VPC
  VpcCidr:
    Type: String
    Description: "Enter VPC CIDR"
    Default: 10.0.0.0/16
    # AllowedPattern: "[0-9\\.]*"
  PublicSubnet1Cidr:
    Type: String
    Description: "Enter Public Subnet1 CIDR"
    Default: 10.0.0.0/24
  PublicSubnet2Cidr:
    Type: String
    Description: "Enter Public Subnet2 CIDR"
    Default: 10.0.1.0/24
  PrivateSubnet1Cidr:
    Type: String
    Description: "Enter Private Subnet1 CIDR"
    Default: 10.0.2.0/24
  PrivateSubnet2Cidr:
    Type: String
    Description: "Enter Private Subnet2 CIDR"
    Default: 10.0.3.0/24
  PrivateSubnet3Cidr:
    Type: String
    Description: "Enter Private Subnet3 CIDR"
    Default: 10.0.4.0/24
  KeyName:
    Type: String
    Description: Enter ssh key pair name
    Default: apachekey
  BucketName:
    Type: String
    Description: Static website bucket name
    Default: sample-bucket-for-vimal
    # AllowedPattern: "[a-z][a-z0-9]*""
  AppName:
    Type: String
    Description: Enter the application Name

#RDS Parameters
  DBName:
    Default: MyDatabase
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumericcharacters.

  DBUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
  DBAllocatedStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.
  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t2.small
    AllowedValues:
      - db.t1.micro
      - db.m1.small
      - db.t2.small
      - db.t2.medium
  MultiAZ:
    Description: Multi-AZ or not..? [true,false]
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: must be true or false.

#SQS Parameters

  QueueType:
    Type: String
    Description: Enter true/false [true=fif0, false=standard]
    AllowedValues: ['true', 'false']
    Default: 'false'
    ConstraintDescription: must be true for fifo que.
  QueueName:
    Type: String
    Default: sample
  DomainName:
    Type: String
    Default: sample.com
  ImageID:
    Type: String
    Default: ami-085925f297f89fce1
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.large
      - t2.micro
      - m4.large
      - m4.xlarge
  ASGName:
    Type: String
    Description: Provdie ASG Name
    Default: Sample
  ServerInstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.large
      - t2.micro
      - m4.large
      - m4.xlarge
  BastionAMI:
    Type: String
    Default: ami-0f0ef9f02e0ede909

#ElasticCache Parameters
  AZMode:
    Type: String
    Description: Availabiliy zone mode
    Default: single-az
    AllowedValues:
      - cross-az
      - single-az
  CacheNodeType:
    Type: String
    Description: Cache node type
    Default: cache.t2.micro
    AllowedValues: [cache.m5.large, cache.m5.xlarge, cache.m5.2xlarge, cache.m5.4xlarge, cache.m5.12xlarge, cache.m5.24xlarge, cache.m4.large, cache.m4.xlarge, cache.m4.2xlarge, cache.m4.4xlarge, cache.m4.10xlarge, cache.t3.micro, cache.t3.small, cache.t3.medium, cache.t2.micro, cache.t2.small, cache.t2.medium]
  ClusterName:
    Type: String
    Default: SampleString
    Description: Enter a valid cluster name
  Engine:
    Type: String
    Default: memcached
    Description: "Select an engine from the drop down"
    AllowedValues:
      - memcached
      - redis
  NumCacheNodes:
    Type: String
    Description: "Number of cache nodes"
    Default: 2
  Port:
    Type: String
    Default: 11211
    Description: "ElastiCache Port, (Memcached: 1121, Redis: 6379)"


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - Project
          - Environment
          - VpcName
          - VpcCidr
          - PublicSubnet1Cidr
          - PublicSubnet2Cidr
          - PrivateSubnet1Cidr
          - PrivateSubnet2Cidr
          - PrivateSubnet3Cidr
      -
        Label:
          default: "Bastion Server Configuration"
        Parameters:
          - KeyName
          - BastionAMI
          - InstanceType
      -
        Label:
          default: "API Servers Configuration"
        Parameters:
          - KeyName
          - ImageID
          - ServerInstanceType
          - AppName
          - ASGName
      -
        Label:
          default: "DB Instance Configuration"
        Parameters:
          - DBName
          - DBUser
          - DBPassword
          - DBAllocatedStorage
          - DBInstanceClass
          - MultiAZ

      -
        Label:
          default: "SQS Configuration"
        Parameters:
          - QueueType
          - QueueName
      -
        Label:
          default: "SQS Configuration"
        Parameters:
          - ClusterName
          - Engine
          - CacheNodeType
          - AZMode
          - NumCacheNodes
          - Port

      -
        Label:
          default: "Static bucket Configuration"
        Parameters:
          - BucketName
      -
        Label:
          default: "DNS Configuration"
        Parameters:
          - DomainName

Conditions:
  IsEnviornmentProd: !Equals [!Ref 'Environment', Prod]
  IsEnviornmentNotProd: !Not [!Equals [!Ref 'Environment', Prod]]

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://some-cf-script.s3.amazonaws.com/VPC.yaml
      Parameters:
        VpcCidr: !Ref "VpcCidr"
        Environment: !Ref "Environment"
        Project: !Ref "Project"
        PublicSubnet1Cidr: !Ref 'PublicSubnet1Cidr'
        PublicSubnet2Cidr: !Ref 'PublicSubnet2Cidr'
        PrivateSubnet1Cidr: !Ref 'PrivateSubnet1Cidr'
        PrivateSubnet2Cidr: !Ref 'PrivateSubnet2Cidr'
        PrivateSubnet3Cidr: !Ref 'PrivateSubnet3Cidr'

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://some-cf-script.s3.amazonaws.com/ALB.yaml
      Parameters:
        VPCID: !GetAtt VPC.Outputs.VPC
        Environment: !Ref 'Environment'
        Project: !Ref 'Project'
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        PublicSubnet1: !GetAtt VPC.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt VPC.Outputs.PublicSubnet2


  DefultServerSG:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://some-cf-script.s3.amazonaws.com/EC2-Security-group.yaml
      Parameters:
        VPCID: !GetAtt 'VPC.Outputs.VPC'
        Environment: !Ref 'Environment'
        ALBSGID: !GetAtt 'ALB.Outputs.ALBSGID'
        VpcCidr: !Ref 'VpcCidr'
        PublicSubnet1Cidr: !Ref 'PublicSubnet1Cidr'
        PublicSubnet2Cidr: !Ref 'PublicSubnet2Cidr'


  # RDS:
  #   Type: AWS::CloudFormation::Stack
  #   Condition: IsEnviornmentNotProd
  #   Properties:
  #     TemplateURL: https://some-cf-script.s3.amazonaws.com/RDS.yaml
  #     Parameters:
  #       DBUser: !Ref 'DBUser'
  #       DBName: !Ref 'DBName'
  #       DBPassword: !Ref 'DBPassword'
  #       Environment: !Ref 'Environment'
  #       VPCID: !GetAtt 'VPC.Outputs.VPC'
  #       DBAllocatedStorage: !Ref 'DBAllocatedStorage'
  #       DBInstanceClass: !Ref 'DBInstanceClass'
  #       MultiAZ: !Ref 'MultiAZ'
  #       PrivateSubnets: !GetAtt 'VPC.Outputs.PrivateSubnets'
  #       EC2SecurityGroup: !GetAtt DefultServerSG.Outputs.EC2SecurityGroupID

  RDSProd:
    Type: AWS::CloudFormation::Stack
    Condition: IsEnviornmentProd
    Properties:
      TemplateURL: https://some-cf-script.s3.amazonaws.com/RDS.yaml
      Parameters:
        DBUser: !Ref 'DBUser'
        DBPassword: !Ref 'DBPassword'
        Environment: !Ref 'Environment'
        VPCID: !GetAtt 'VPC.Outputs.VPC'
        DBAllocatedStorage: !Ref 'DBAllocatedStorage'
        DBInstanceClass: !Ref 'DBInstanceClass'
        MultiAZ: !Ref 'MultiAZ'
        PrivateSubnets: !GetAtt 'VPC.Outputs.ProdPrivateSubnets'
        EC2SecurityGroup: !GetAtt DefultServerSG.Outputs.EC2SecurityGroupID

  SQS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://some-cf-script.s3.amazonaws.com/sqs.yaml
      Parameters:
        QueueType: !Ref 'QueueType'
        QueueName: !Ref 'QueueName'

  # StaticBucket:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: https://some-cf-script.s3.amazonaws.com/staticbucket.yaml
  #     Parameters:
  #       BucketName: !Ref 'BucketName'
  #
  # CDN:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: https://some-cf-script.s3.amazonaws.com/CDN.yaml
  #     Parameters:
  #       ALBDNS: !GetAtt ALB.Outputs.AlbDNS
  #       StaticBucket: !GetAtt StaticBucket.Outputs.BucketName
  #       DomainName: !Ref 'DomainName'
  #       BucketDNS: !GetAtt StaticBucket.Outputs.BucketDNS


#  Bastion:
#    Type: AWS::CloudFormation::Stack
#    Properties:
#      TemplateURL: https://some-cf-script.s3.amazonaws.com/Bastion.yaml
#      Parameters:
#        VPCID: !GetAtt VPC.Outputs.VPC
#        Environment: !Ref 'Environment'
#        PublicSubnet1: !GetAtt VPC.Outputs.PublicSubnet1
#        KeyName: !Ref 'KeyName'
#        BastionAMI: !Ref 'BastionAMI'

  TargetGroup:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://some-cf-script.s3.amazonaws.com/TargetGroup.yaml
      Parameters:
        TargetGroupName: !Sub ${Environment}-TargetGroup
        VPCID: !GetAtt 'VPC.Outputs.VPC'



  WebServers:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://some-cf-script.s3.amazonaws.com/AutoscalingLaunchConfiguration.yaml
      # TemplateURL: https://some-cf-script.s3.amazonaws.com/AutoscalingGroup.yaml
      Parameters:
        ImageID: !Ref 'ImageID'
        InstanceType: !Ref 'InstanceType'
        KeyName: !Ref 'KeyName'
        Environment: !Ref 'Environment'
        PrivateSubnets: !GetAtt 'VPC.Outputs.PrivateSubnets'
        EC2SecurityGroup: !GetAtt 'DefultServerSG.Outputs.EC2SecurityGroupID'
        ASGName: !Sub ${Environment}-WebServer-ASG
        TargetGroupARN: !GetAtt 'TargetGroup.Outputs.TargetGroupARN'
        AppName: !Ref 'AppName'
        InstanceType: !Ref 'ServerInstanceType'
  #
  # ElasticCache:
  #   Type: AWS::CloudFormation::Stack
  #   Condition: IsEnviornmentProd
  #   Properties:
  #     TemplateURL: https://some-cf-script.s3.amazonaws.com/Elasticache.yaml
  #     Parameters:
  #       AZMode: !Ref 'AZMode'
  #       CacheNodeType: !Ref 'CacheNodeType'
  #       PrivateSubnets: !GetAtt 'VPC.Outputs.ProdPrivateSubnets'
  #       ClusterName: !Ref 'ClusterName'
  #       Engine: !Ref 'Engine'
  #       NumCacheNodes: !Ref 'NumCacheNodes'
  #       EC2SecurityGroupID: !GetAtt 'DefultServerSG.Outputs.EC2SecurityGroupID'
  #       Port: !Ref 'Port'
